coleccion=tablas 
documentos=informacion en las tablas

mongod
mongosh
show dbs;
use redsocial;
db.createCollection("(nombre de la base de datos)");
use demo;
db.dropDatabase(); / eliminar base de datos

cls / limpiar pantalla

use redsocial  /crear o abir base de datos
 
db.createCollection("post");  /crear documento
db.createCollection("libros");
db.createCollection("usuarios");

db.(nombre de la collection).insertOne(); /insertar documento

db.post.insertOne({nombre: "Ingenioteka", fecha: "abril 22", description: "hola como estan todos"});


db.(nombre de la collection).insertMany({},{},{});

db.post.insertMany({nombre: "Ingenioteka", fecha: "mayo 10", description: "Feliz dia de las madres"},{nombre: "Ingenioteka", fecha: "mayo 111", description: "Feliz dia"});


db.post.find(); / mostrar documentos

db.post.find({nombre: {$eq: "javier"}})

db.post.insertOne({nombre: "carlos", fecha: "enero 20", descripcion: "hoy no hay clase", like: 15 })
db.post.insertOne({nombre: "maria", fecha: "diciembre 28", descripcion: "hay fiesta", like: 3 })
db.post.insertOne({nombre: "roberto", fecha: "enero 27", descripcion: "hoy es mi cumple", like: 18 })
db.post.insertOne({nombre: "marissa", fecha: "diciembre 27", descripcion: "hoy descansamos", like: 25 })


db.post.find({like: {$lt:6}})
db.post.find({like: {$lt:100}})


db.post.find({like: {$lt:100}}) /menor que
db.post.find({like: {$lte:100}}) / menor que igual
db.post.find({like: {$gt:100}})  /mayor que 
db.post.find({like: {$gte:100}})  / mayor que igual 


db.post.insertOne({nombre: "pilar", fecha: "junio 18", descripcion: "cursos gratuitos", like: 150 });
db.post.insertOne({nombre: "fabian", fecha: "mayo 18", descripcion: "acabo de ganar una beca", like: 150});
db.post.insertOne({nombre: "blanca", fecha: "julio 05", descripcion: "entrenamiento en la sierra", like: 10})
db.post.insertOne({nombre: "benjamin", fecha: "julio 07", descripcion: "jojojojoj", like: 19 });


db.post.find({nombre: {$ne: "luis"}}); /no sean iguales
db.post.find({nombre: {$ne: "pilar"}});
db.post.find({like: {$ne: 10}});
db.post.find({like: {$ne: 150}});

db.post.find({nombre: {$nin: ["pilar", "blanca"]}}); / no dentor de la base de datos  o documento

db.post.find({nombre: {$nin: ["pilar", "blanca"]}}); / corchete para muchos

db.post.find({nombre: {$nin: ["pilar", "blanca", "Ingenioteka", "jessica", "felipe"]}});



db.post.find({$and:[{nombre: "pilar"},{like: {$gt: 120}}]}) / operador logico y o and 


db.post.find({$and:[{nombre: "pilar"},{like: {$gt: 150}}]}) / no arroja noda es igula pero no se usa operador correcto


db.post.find({$and:[{nombre: "pilar"},{like: {$gte: 150}}]}) / ya lo arroja

db.post.find({$or:[{nombre: "pilar"},{like: {$gt: 150}}]})


db.post.find({nombre: {$ne: "javier"}})

db.post.find({$not: {nombre:"javier"}})

db.post.find({nombre: {$not: {$eq: "javier"}}})


db.post.find({like:{$gt: 25}})

db.post.find({like: {$not: {$gt: 25}}})

CLASE 2
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------

db.usuarios.insertOne({_id: 1, nombre: "luis"});
db.usuarios.insertOne({_id: 2, nombre: "lupe"});
db.usuarios.insertOne({_id: 3, nombre: "pilar"});
db.usuarios.insertOne({_id: 4, nombre: "gustavo", edad: 23});
db.usuarios.insertOne({_id: 5, nombre: "luis", edad: 23});
db.usuarios.insertOne({_id: 6, nombre: "carlos", edad: 23});
db.usuarios.insertOne({_id: 7, nombre: "felipe", edad: 24});
db.usuarios.insertOne({_id: 8, nombre: "paloma", edad: 30});
db.usuarios.insertOne({_id: 9, nombre: "octavio", edad: 35});
db.usuarios.insertOne({_id: 10, nombre: "fermin", edad: 28});
db.usuarios.insertOne({_id: 11, nombre: "martha", edad: 18});



db.usuarios.deleteOne({edad:23});  // elimina solo un el primero que encuentre con ese valor
db.usuarios.deleteMany({edad: 23});  // elimina todos los que tengan la edad de 23

db.usuarios.insertOne({_id: 12, nombre: "monica", edad: 18});


db.usuarios.deleteMany({edad: 18});



db.usuarios.updateOne({edad: 28},{$set: {nombre: "benjamin"}}); // para actualizar el documento se le espesifica que persona y para nodificar se coloca el '$set'


db.usuarios.updateMany({edad: {$gte: 30 }},{$set; [{nombre: "marlon"}});

db.usuarios.updateMany({edad: {$gte: 30 }},{$set; [{nombre: "emily"},{edad: 18}] });


db.usuarios.updateMany({edad: {$gte: 30 }},{$set; {nombre: "emily",edad: 18}} );



db.post.find({},{nombre: 1, fecha: 1});

db.postfind({},{_id: 0, nombre: 1, fecha: 1});    // con los 0 se refiere que no se muestre - y con el 1 se refiere que se muestre



ORDENAMIENTO
------------

db.usuarios.find().sort({nombre: 1});   // oderdena de manera asendente

db.uauarios.find().sort({edad: -1}) // ordena de forma desendente


db.usuarios.insetOne({_id: 13, nombre: adso, edad:30});

db.usuarios.find().sort({edad: 1}).pretry // lo orddena creo

db.usuarios.find().limit(5);

db.usuarios.find().sort({ _id: -1 }).limit(2) // se muestra los primeros 2

db.usuarios.find().skip(2); // se salta a aprtir de el numero elegido


db.usuarios.find().skip(2).limit(2); 



-------------------------------------------------------------------------------------------

use base1;

db.clientes.insertMany([

{_id: 1, mnombre: "Martinez Victor",mail: "mvictor@gmail.com", direccion: { calle: "colon", numero: 620, codigopostal: 5000}},
{_id: 2, mnombre: "Alonso Carlo",mail: "acarlos@gmail.com", direccion: { calle: "colon", numero: 150, codigopostal: 5000}},
{_id: 3, mnombre: "Gonzales Marta",mail: "gmarta@outlook.com", direccion: { calle: "colon", numero: 1200, codigopostal: 5000}}

]);


db.clientes.insertMany([

{_id: 4, mnombre: "Ferrero Ariel",mail: "fariel@yahoo.com", direccion: { calle: "Dean Funes", numero: 23, codigopostal: 5002}},
{_id: 5, mnombre: "Fernandez Diego",mail: "fdiego@gmail.com", direccion: { calle: "Desn Funes", numero: 561, codigopostal: 5002}}

]);


db.clientes.insertMany([

{_id: 6, mnombre: "Ferrero Ariel",mail: "fariel@yahoo.com", direccion: { calle: "Dean Funes", numero: 23, codigopostal: 5002}},
{_id: 7, mnombre: "Fernandez Diego",mail: "fdiego@gmail.com", direccion: { calle: "Desn Funes", numero: 561, codigopostal: 5002}}

]);




db.clientes.find({calle:  {$eq: "colon"}});
db.clientes.find({"direcccion.calle": "colon"});

 db.clientes.find({$and: [{"direccion.calle": "colon"},{"direccion.numero":  }]});


db.clientes.find({$and: [{"direccion.calle": "colon"},{"direccion.numero": {$gte: 1, $lte: 1000} }]});













